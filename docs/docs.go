// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/weather": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Weather"
                ],
                "summary": "Get weather details",
                "operationId": "GetWeatherDetails",
                "parameters": [
                    {
                        "type": "string",
                        "description": "City name",
                        "name": "city",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.OpenWeatherMapResponse"
                        }
                    },
                    "400": {
                        "description": "missing city query parameter"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Clouds": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "integer"
                }
            }
        },
        "dto.Coord": {
            "type": "object",
            "properties": {
                "lat": {
                    "type": "number"
                },
                "lon": {
                    "type": "number"
                }
            }
        },
        "dto.Main": {
            "type": "object",
            "properties": {
                "feels_like": {
                    "type": "number"
                },
                "grnd_level": {
                    "type": "integer"
                },
                "humidity": {
                    "type": "integer"
                },
                "pressure": {
                    "type": "integer"
                },
                "sea_level": {
                    "type": "integer"
                },
                "temp": {
                    "type": "number"
                },
                "temp_max": {
                    "type": "number"
                },
                "temp_min": {
                    "type": "number"
                }
            }
        },
        "dto.OpenWeatherMapResponse": {
            "type": "object",
            "properties": {
                "base": {
                    "type": "string"
                },
                "clouds": {
                    "$ref": "#/definitions/dto.Clouds"
                },
                "cod": {
                    "type": "integer"
                },
                "coord": {
                    "$ref": "#/definitions/dto.Coord"
                },
                "dt": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "main": {
                    "$ref": "#/definitions/dto.Main"
                },
                "name": {
                    "type": "string"
                },
                "rain": {
                    "$ref": "#/definitions/dto.Rain"
                },
                "snow": {
                    "$ref": "#/definitions/dto.Snow"
                },
                "sys": {
                    "$ref": "#/definitions/dto.Sys"
                },
                "timezone": {
                    "type": "integer"
                },
                "visibility": {
                    "type": "integer"
                },
                "weather": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Weather"
                    }
                },
                "wind": {
                    "$ref": "#/definitions/dto.Wind"
                }
            }
        },
        "dto.Rain": {
            "type": "object",
            "properties": {
                "1h": {
                    "type": "number"
                }
            }
        },
        "dto.Snow": {
            "type": "object",
            "properties": {
                "1h": {
                    "type": "number"
                }
            }
        },
        "dto.Sys": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "number"
                },
                "sunrise": {
                    "type": "integer"
                },
                "sunset": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "dto.Weather": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "main": {
                    "type": "string"
                }
            }
        },
        "dto.Wind": {
            "type": "object",
            "properties": {
                "deg": {
                    "type": "integer"
                },
                "gust": {
                    "type": "number"
                },
                "speed": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Weather API",
	Description:      "API to fetch weather data for a given city.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
